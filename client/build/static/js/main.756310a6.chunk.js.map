{"version":3,"sources":["Component/Navbar/NavbarCard.jsx","Component/Navbar/Topbar.jsx","Component/Jumbotron/Jumbotron.jsx","Component/Footer/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["NavbarCard","className","icon","this","getIcon","props","info","getText","faPhoneAlt","faMapMarkedAlt","faClock","faBug","Component","Topbar","src","alt","loading","Jumbotron","Footer","id","href","faFacebookF","faTwitter","faInstagram","faEnvelope","faHeart","App","Fragment","faHeartbeat","size","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kZAmDeA,G,6KAvCX,OACE,yBAAKC,UAAU,cACb,yBAAKA,UAAU,eACb,kBAAC,IAAD,CACEC,KAAMC,KAAKC,QAAQD,KAAKE,MAAMC,MAC9BL,UAAU,cAGd,yBAAKA,UAAU,eAAeE,KAAKI,QAAQJ,KAAKE,MAAMC,U,8BAKpDA,GACN,OAAQA,GACN,IAAK,OACH,OAAOE,IACT,IAAK,WACH,OAAOC,IACT,IAAK,SACH,OAAOC,IACT,QACE,OAAOC,O,8BAGLL,GACN,OAAQA,GACN,IAAK,OACH,MAAO,kBACT,IAAK,WACH,MAAO,sBACT,IAAK,SACH,MAAO,6BACT,QACE,MAAO,uB,GApCUM,cCoBVC,G,6KAxBX,OACE,yBAAKZ,UAAU,yBACb,yBAAKA,UAAU,wCACb,yBAAKA,UAAU,eACb,yBACEa,IAAI,eACJb,UAAU,2BACVc,IAAI,yBACJC,QAAQ,UAGZ,yBAAKf,UAAU,cAAf,uBAEF,yBAAKA,UAAU,aACf,yBAAKA,UAAU,mCACb,kBAAC,EAAD,CAAYK,KAAK,SACjB,kBAAC,EAAD,CAAYA,KAAK,WACjB,kBAAC,EAAD,CAAYA,KAAK,mB,GAnBNM,cCWNK,G,6KAVX,OACE,yBAAKhB,UAAU,6BACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,aAAd,0BACA,uBAAGA,UAAU,QAAb,0B,GANcW,c,OCsDTM,G,6KA7CX,OACE,6BAASC,GAAG,UACV,yBAAKlB,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,8CACb,wBAAIA,UAAU,gDACZ,wBAAIA,UAAU,oBACZ,uBAAGmB,KAAK,mCACN,kBAAC,IAAD,CAAiBlB,KAAMmB,QAG3B,wBAAIpB,UAAU,oBACZ,uBAAGmB,KAAK,mCACN,kBAAC,IAAD,CAAiBlB,KAAMoB,QAG3B,wBAAIrB,UAAU,oBACZ,uBAAGmB,KAAK,mCACN,kBAAC,IAAD,CAAiBlB,KAAMqB,QAG3B,wBAAItB,UAAU,oBACZ,uBAAGmB,KAAK,mCACN,kBAAC,IAAD,CAAiBlB,KAAMsB,UAK/B,8BAEF,yBAAKvB,UAAU,OACb,yBAAKA,UAAU,qEACb,uBAAGA,UAAU,MAAb,YACY,IACV,kBAAC,IAAD,CAAiBC,KAAMuB,IAASxB,UAAU,cAF5C,aAKF,oC,GAvCSW,cCoBNc,MApBf,WACE,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,yBAAK1B,UAAU,aACb,yBAAKA,UAAU,iBACb,kBAAC,IAAD,CACEC,KAAM0B,IACNC,KAAK,MACL5B,UAAU,eAGd,yBAAKA,UAAU,iBAAf,gBAEF,kBAAC,EAAD,QCbc6B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.756310a6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPhoneAlt,\r\n  faClock,\r\n  faBug,\r\n  faMapMarkedAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"../../Asset/Style/NavbarCard.css\";\r\n\r\nclass NavbarCard extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"navbarCard\">\r\n        <div className=\"navCardIcon\">\r\n          <FontAwesomeIcon\r\n            icon={this.getIcon(this.props.info)}\r\n            className=\"cardIcon\"\r\n          />\r\n        </div>\r\n        <div className=\"navCardText\">{this.getText(this.props.info)}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getIcon(info) {\r\n    switch (info) {\r\n      case \"Call\":\r\n        return faPhoneAlt;\r\n      case \"Location\":\r\n        return faMapMarkedAlt;\r\n      case \"Timing\":\r\n        return faClock;\r\n      default:\r\n        return faBug;\r\n    }\r\n  }\r\n  getText(info) {\r\n    switch (info) {\r\n      case \"Call\":\r\n        return \"+91 12345 12345\";\r\n      case \"Location\":\r\n        return \"Shaguna More, Patna\";\r\n      case \"Timing\":\r\n        return \"9:00 AM - 5:00 PM everyday\";\r\n      default:\r\n        return \"Unexpected Call\";\r\n    }\r\n  }\r\n}\r\n\r\nexport default NavbarCard;\r\n","import React, { Component } from \"react\";\r\nimport NavbarCard from \"./NavbarCard\";\r\nimport \"../../Asset/Style/Topbar.css\";\r\n\r\nclass Topbar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"topbar row no-gutters\">\r\n        <div className=\"topbar-item brand col-lg-4 col-sm-12\">\r\n          <div className=\"brand-image\">\r\n            <img\r\n              src=\"/logo192.png\"\r\n              className=\"d-inline-block align-top\"\r\n              alt=\"MARS Speciality Clinic\"\r\n              loading=\"lazy\"\r\n            />\r\n          </div>\r\n          <div className=\"brand-text\"> Speciality Clinic</div>\r\n        </div>\r\n        <div className=\"col-lg-2\"></div>\r\n        <div className=\"topbar-item info-cards col-lg-6\">\r\n          <NavbarCard info=\"Call\" />\r\n          <NavbarCard info=\"Timing\" />\r\n          <NavbarCard info=\"Location\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Topbar;\r\n","import React, { Component } from \"react\";\r\nimport \"../../Asset/Style/Jumbotron.css\";\r\n\r\nclass Jumbotron extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"jumbotron jumbotron-fluid\">\r\n        <div className=\"container\">\r\n          <h1 className=\"display-4\">MARS Speciality Clinic</h1>\r\n          <p className=\"lead\">Passion for Cure</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Jumbotron;\r\n","import React, { Component } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEnvelope, faHeart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  faFacebookF,\r\n  faTwitter,\r\n  faInstagram,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport \"../../Asset/Style/Footer.css\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <section id=\"footer\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-xs-12 col-sm-12 col-md-12 mt-2 mt-sm-5\">\r\n              <ul className=\"list-unstyled list-inline social text-center\">\r\n                <li className=\"list-inline-item\">\r\n                  <a href=\"http://www.marsclinicpatna.com/\">\r\n                    <FontAwesomeIcon icon={faFacebookF} />\r\n                  </a>\r\n                </li>\r\n                <li className=\"list-inline-item\">\r\n                  <a href=\"http://www.marsclinicpatna.com/\">\r\n                    <FontAwesomeIcon icon={faTwitter} />\r\n                  </a>\r\n                </li>\r\n                <li className=\"list-inline-item\">\r\n                  <a href=\"http://www.marsclinicpatna.com/\">\r\n                    <FontAwesomeIcon icon={faInstagram} />\r\n                  </a>\r\n                </li>\r\n                <li className=\"list-inline-item\">\r\n                  <a href=\"http://www.marsclinicpatna.com/\">\r\n                    <FontAwesomeIcon icon={faEnvelope} />\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <hr />\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-xs-12 col-sm-12 col-md-12 mt-2 mt-sm-2 text-center text-black\">\r\n              <p className=\"h6\">\r\n                Made with{\" \"}\r\n                <FontAwesomeIcon icon={faHeart} className=\"heartIcon\" /> in 2020\r\n              </p>\r\n            </div>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeartbeat } from \"@fortawesome/free-solid-svg-icons\";\nimport Topbar from \"./Component/Navbar/Topbar\";\nimport Jumbotron from \"./Component/Jumbotron/Jumbotron\";\nimport Footer from \"./Component/Footer/Footer\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Topbar />\n      <Jumbotron />\n      <div className=\"container\">\n        <div className=\"containerIcon\">\n          <FontAwesomeIcon\n            icon={faHeartbeat}\n            size=\"10x\"\n            className=\"heartLogo\"\n          />\n        </div>\n        <div className=\"containerText\">Coming Soon</div>\n      </div>\n      <Footer />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}